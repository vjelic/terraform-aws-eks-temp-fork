{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "glog-9b28b440-a81a-4a3d-8a25-da1543da10ed",
              "help": {
                "text": "",
                "markdown": "```markdown\n### Description\n\nThe vulnerability \"Control plane scheduler logging is not enabled\" in Terraform refers to the lack of logging for the control plane scheduler in a Kubernetes cluster. This can lead to insufficient monitoring and auditing capabilities, making it difficult to detect and respond to potential security incidents or operational issues. Without proper logging, it becomes challenging to track changes, understand system behavior, and ensure compliance with security policies.\n\n### General Mitigation Advice\n\nTo mitigate this vulnerability, ensure that logging is enabled for the control plane scheduler. This involves configuring the Kubernetes cluster to capture and store logs generated by the scheduler, which can then be analyzed for security and operational insights.\n\n### Source Code Fix Recommendation\n\nTo enable control plane scheduler logging in Terraform, you can modify your Kubernetes cluster configuration to include logging settings. Below is an example of how you might configure this in a Terraform script:\n\n```hcl\nresource \"google_container_cluster\" \"primary\" {\n  name     = \"my-gke-cluster\"\n  location = \"us-central1\"\n\n  logging_service = \"logging.googleapis.com/kubernetes\"\n\n  master_auth {\n    username = \"\"\n    password = \"\"\n  }\n\n  # Enable logging for the control plane scheduler\n  addons_config {\n    http_load_balancing {\n      disabled = false\n    }\n\n    horizontal_pod_autoscaling {\n      disabled = false\n    }\n\n    kubernetes_dashboard {\n      disabled = true\n    }\n\n    network_policy_config {\n      disabled = false\n    }\n  }\n}\n```\n\nEnsure that the `logging_service` is set to capture Kubernetes logs, which includes the control plane scheduler logs.\n\n### Relevant OWASP Resources\n\n- [OWASP Logging Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html)\n- [OWASP Kubernetes Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Kubernetes_Security_Cheat_Sheet.html)\n\n### Common Weakness Enumeration (CWE)\n\n- [CWE-778: Insufficient Logging](https://cwe.mitre.org/data/definitions/778.html)\n```"
              },
              "properties": {
                "tags": [
                  "aws-eks-enable-control-plane-logging"
                ]
              }
            },
            {
              "id": "glog-57b14266-d2f7-48b6-83d1-997569821c74",
              "help": {
                "text": "",
                "markdown": "```markdown\n### Description\n\nIn Terraform, a security group rule that allows egress to multiple public internet addresses can pose a significant security risk. This configuration can inadvertently expose your infrastructure to potential attacks by allowing outbound traffic to any IP address on the internet. Such a rule can be exploited by malicious actors to exfiltrate data or communicate with command and control servers.\n\n### General Mitigation Advice\n\nTo mitigate this vulnerability, it is crucial to restrict egress traffic to only the necessary IP addresses and ports. Implement the principle of least privilege by allowing outbound traffic only to specific, trusted IP addresses and services. Regularly review and update your security group rules to ensure they align with your security policies.\n\n### Source Code Fix Recommendation\n\nBelow is an example of how you can modify your Terraform configuration to restrict egress traffic:\n\n```hcl\nresource \"aws_security_group\" \"example\" {\n  name        = \"example-security-group\"\n  description = \"Example security group\"\n\n  egress {\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n    cidr_blocks = [\"203.0.113.0/24\"] # Restrict to specific IP range\n  }\n\n  egress {\n    from_port   = 443\n    to_port     = 443\n    protocol    = \"tcp\"\n    cidr_blocks = [\"203.0.113.0/24\"] # Restrict to specific IP range\n  }\n}\n```\n\nIn this example, egress traffic is restricted to a specific IP range (`203.0.113.0/24`) for both HTTP and HTTPS traffic.\n\n### Relevant Resources\n\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\n\n### Common Weakness Enumeration (CWE)\n\nThis issue is related to [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor](https://cwe.mitre.org/data/definitions/200.html).\n```"
              },
              "properties": {
                "tags": [
                  "aws-ec2-no-public-egress-sgr"
                ]
              }
            },
            {
              "id": "glog-9b8f3dee-e314-4424-915c-9b6de429d687",
              "help": {
                "text": "",
                "markdown": "### Description\n\nThe vulnerability \"Control plane controller manager logging is not enabled\" in Terraform refers to a misconfiguration where logging for the control plane's controller manager is not activated. This can lead to a lack of visibility into the operations and potential issues within the Kubernetes control plane, making it difficult to audit actions, troubleshoot problems, and detect malicious activities.\n\n### General Mitigation Advice\n\nTo mitigate this vulnerability, ensure that logging is enabled for the control plane's controller manager. This involves configuring the appropriate logging settings in your Terraform scripts to capture necessary logs for monitoring and auditing purposes.\n\n### Source Code Fix Recommendation\n\nTo enable logging for the control plane controller manager in Terraform, you can modify your Terraform configuration to include the necessary logging settings. Below is an example of how you might configure logging for a Kubernetes cluster using Terraform:\n\n```hcl\nresource \"kubernetes_cluster\" \"example\" {\n  name     = \"example-cluster\"\n  location = \"us-central1\"\n\n  master_auth {\n    username = \"admin\"\n    password = \"password\"\n  }\n\n  logging_service = \"logging.googleapis.com/kubernetes\"\n\n  addons_config {\n    http_load_balancing {\n      disabled = false\n    }\n\n    horizontal_pod_autoscaling {\n      disabled = false\n    }\n\n    kubernetes_dashboard {\n      disabled = true\n    }\n\n    network_policy_config {\n      disabled = false\n    }\n  }\n\n  # Enable logging for the control plane\n  master_authorized_networks_config {\n    cidr_blocks {\n      cidr_block   = \"0.0.0.0/0\"\n      display_name = \"all\"\n    }\n  }\n}\n```\n\nEnsure that the `logging_service` is set to a valid logging service endpoint, and that any necessary IAM roles or permissions are configured to allow logging.\n\n### OWASP Resources\n\n- [OWASP Logging Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html)\n- [OWASP Kubernetes Security Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Kubernetes_Security_Cheat_Sheet.html)\n\n### Common Weakness Enumeration (CWE)\n\n- [CWE-778: Insufficient Logging](https://cwe.mitre.org/data/definitions/778.html)\n\nThese resources provide additional guidance on best practices for logging and securing Kubernetes environments."
              },
              "properties": {
                "tags": [
                  "aws-eks-enable-control-plane-logging"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "glog-9b28b440-a81a-4a3d-8a25-da1543da10ed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Control plane scheduler logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "main.tf"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 188
                }
              }
            }
          ]
        },
        {
          "ruleId": "glog-57b14266-d2f7-48b6-83d1-997569821c74",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Security group rule allows egress to multiple public internet addresses."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_groups.tf"
                },
                "region": {
                  "startLine": 247,
                  "endLine": 247
                }
              }
            }
          ]
        },
        {
          "ruleId": "glog-9b8f3dee-e314-4424-915c-9b6de429d687",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Control plane controller manager logging is not enabled."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "main.tf"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 188
                }
              }
            }
          ]
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}